import pickle

class database:
    def __init__(self):
        self.yoyakugo_dic = {}
        self.prime_splitter_dic ={}
        self.splitter_text_dic = {}
        self.comment_bfaf = {}
        self.unique_char_dic = {}
        self.usertype_bfaf = {}
        self.language_list = ["cpp", "python", "arduino", "java", "html", "css", "processing"]

    def make_yoyakugo_dic(self):
        dic_cpp = {}
        dic_cpp["Win32_API"] = ["ArrangeIconicWindows", "CopyIcon", "CreateIcon", "CreateIconFromResource", "CreateIconFromResourceEx", "CreateIconIndirect", "DestroyIcon", "DrawIcon", "DrawIconEx", "DuplicateIcon", "ExtractAssociatedIcon", "ExtractIcon", "ExtractIconEx", "GetIconInfo", "LoadIcon", "LookupIconIdFromDirectory", "LookupIconIdFromDirectoryEx", "AdjustTokenGroups", "AdjustTokenPrivileges", "AllocateAndInitializeSid", "AllocateLocallyUniqueId", "BuildExplicitAccessWithName", "BuildImpersonateExplicitAccessWithName", "BuildImpersonateTrustee", "BuildTrusteeWithName", "BuildTrusteeWithSid", "CheckTokenMembership", "ConvertSecurityDescriptorToStringSecurityDescriptor", "ConvertStringSecurityDescriptorToSecurityDescriptor", "ConvertSidToStringSid", "ConvertStringSidToSid", "CopySid", "CreateRestrictedToken", "CreateSecurityPage", "DuplicateToken", "DuplicateTokenEx", "EditSecurity", "EqualPrefixSid", "EqualSid", "FreeSid", "GetAuditedPermissionsFromAcl", "GetExplicitEntriesFromAcl", "GetLengthSid", "GetMultipleTrustee", "GetMultipleTrusteeOperation", "GetNamedSecurityInfo", "GetSecurityDescriptorControl", "GetSecurityInfo", "GetSidIdentifierAuthority", "GetSidLengthRequired", "GetSidSubAuthority", "GetSidSubAuthorityCount", "GetTokenInformation", "GetTrusteeForm", "GetTrusteeName", "GetTrusteeType", "ImpersonateAnonymousToken", "InitializeSid", "IsTokenRestricted", "IsValidSid", "LookupAccountName", "LookupAccountSid", "LookupPrivilegeDisplayName", "LookupPrivilegeName", "LookupPrivilegeValue", "OpenProcessToken", "OpenThreadToken", "SetEntriesInAcl", "SetNamedSecurityInfo", "SetSecurityDescriptorControl", "SetSecurityInfo", "SetThreadToken", "SetTokenInformation", "AccessCheck", "AccessCheckAndAuditAlarm", "AccessCheckByType", "AccessCheckByTypeAndAuditAlarm", "AccessCheckByTypeResultListAndAuditAlarm", "AccessCheckByTypeResultList", "AreAllAccessesGranted", "AreAnyAccessesGranted", "BuildSecurityDescriptor", "ConvertToAutoInheritPrivateObjectSecurity", "CreatePrivateObjectSecurity", "CreatePrivateObjectSecurityEx", "DestroyPrivateObjectSecurity", "GetPrivateObjectSecurity", "ImpersonateLoggedOnUser", "ImpersonateNamedPipeClient", "ImpersonateSelf", "LogonUser", "LookupSecurityDescriptorParts", "MapGenericMask", "ObjectCloseAuditAlarm", "ObjectDeleteAuditAlarm", "ObjectOpenAuditAlarm", "ObjectPrivilegeAuditAlarm", "PrivilegeCheck", "PrivilegedServiceAuditAlarm", "RevertToSelf", "SetPrivateObjectSecurity", "SetPrivateObjectSecurityEx", "AddAccessAllowedAce", "AddAccessAllowedAceEx", "AddAccessAllowedObjectAce", "AddAccessDeniedAce", "AddAccessDeniedAceEx", "AddAccessDeniedObjectAce", "AddAce", "AddAuditAccessAce", "AddAuditAccessAceEx", "AddAuditAccessObjectAce", "DeleteAce", "FindFirstFreeAce", "GetAce", "GetAclInformation", "GetFileSecurity", "GetKernelObjectSecurity", "GetSecurityDescriptorDacl", "GetSecurityDescriptorGroup", "GetSecurityDescriptorLength", "GetSecurityDescriptorOwner", "GetSecurityDescriptorSacl", "GetUserObjectSecurity", "IsValidAcl", "IsValidSecurityDescriptor", "MakeAbsoluteSD", "MakeSelfRelativeSD", "QueryServiceObjectSecurity", "RegGetKeySecurity", "RegSetKeySecurity", "SetAclInformation", "SetFileSecurity", "SetKernelObjectSecurity", "SetSecurityDescriptorDacl", "SetSecurityDescriptorGroup", "SetSecurityDescriptorOwner", "SetSecurityDescriptorSacl", "SetServiceObjectSecurity", "SetUserObjectSecurity", "CopyLZFile", "GetExpandedName", "LZClose", "LZCopy", "LZDone", "LZInit", "LZOpenFile", "LZRead", "LZSeek", "LZStart", "AddAtom", "DeleteAtom", "FindAtom", "GetAtomName", "InitAtomTable", "GlobalAddAtom", "GlobalDeleteAtom", "GlobalFindAtom", "GlobalGetAtomName", "他", "GetAtomHandle", "BackupEventLog", "ClearEventLog", "CloseEventLog", "DeregisterEventSource", "GetEventLogInformation", "GetNumberOfEventLogRecords", "GetOldestEventLogRecord", "NotifyChangeEventLog", "OpenBackupEventLog", "OpenEventLog", "ReadEventLog", "RegisterEventSource", "ReportEvent", "AnimatePalette", "CreateHalftonePalette", "CreatePalette", "GetColorAdjustment", "GetNearestColor", "GetNearestPaletteIndex", "GetPaletteEntries", "GetSysColor", "GetSystemPaletteEntries", "GetSystemPaletteUse", "HTUI_ColorAdjustment", "HTUI_DeviceColorAdjustment", "RealizePalette", "ResizePalette", "SelectPalette", "SetColorAdjustment", "SetPaletteEntries", "SetSystemPaletteUse", "UnrealizeObject", "UpdateColors", "AbortDoc", "AbortPrinter", "AbortProc", "AddForm", "AddJob", "AddMonitor", "AddPort", "AddPrinter", "AddPrinterConnection", "AddPrinterDriver", "AddPrinterDriverEx", "AddPrintProcessor", "AddPrintProvidor", "AdvancedDocumentProperties", "ClosePrinter", "ConfigurePort", "ConnectToPrinterDlg", "DeleteForm", "DeleteMonitor", "DeletePort", "DeletePrinter", "DeletePrinterConnection", "DeletePrinterData", "DeletePrinterDataEx", "DeletePrinterDriver", "DeletePrinterDriverEx", "DeletePrinterKey", "DeletePrintProcessor", "DeletePrintProvidor", "DeviceCapabilities", "DeviceCapabilitiesEx", "DocumentProperties", "EndDoc", "EndDocPrinter", "EndPage", "EndPagePrinter", "EnumForms", "EnumJobs", "EnumMonitors", "EnumPorts", "EnumPrinterData", "EnumPrinterDataEx", "EnumPrinterDrivers", "EnumPrinterKey", "EnumPrinters", "EnumPrintProcessors", "EnumPrintProcessorDatatypes", "Escape", "ExtEscape", "FindClosePrinterChangeNotification", "FindFirstPrinterChangeNotification", "FindNextPrinterChangeNotification", "FlushPrinter", "FreePrinterNotifyInfo", "GetDefaultPrinter", "GetForm", "GetJob", "GetPrinter", "GetPrinterData", "GetPrinterDataEx", "GetPrinterDriver", "GetPrinterDriverDirectory", "GetPrintProcessorDirectory", "OpenPrinter", "PrinterMessageBox", "PrinterProperties", "ReadPrinter", "ResetPrinter", "ScheduleJob", "SetAbortProc", "SetForm", "SetJob", "SetPort", "SetPrinter", "SetPrinterData", "SetPrinterDataEx", "StartDoc", "StartDocPrinter", "StartPage", "StartPagePrinter", "WaitForPrinterChange", "WritePrinter", "GetClassInfo", "GetClassInfoEx", "GetClassLong", "GetClassLongPtr", "GetClassName", "GetClassWord", "GetWindowLong", "GetWindowLongPtr", "GetWindowWord", "RegisterClass", "RegisterClassEx", "SetClassLong", "SetClassLongPtr", "SetClassWord", "SetWindowLong", "SetWindowLongPtr", "SetWindowWord", "UnregisterClass", "CallWindowProc", "DefWindowProc", "WindowProc", "EnumProps", "EnumPropsEx", "GetProp", "PropEnumProc", "PropEnumProcEx", "RemoveProp", "SetProp", "ScrollWindow", "ScrollWindowEx", "GetTitleBarInfo", "GetWindowText", "GetWindowTextLength", "SetWindowText", "AdjustWindowRect", "AdjustWindowRectEx", "AllowSetForegroundWindow", "AnimateWindow", "AnyPopup", "BeginDeferWindowPos", "BringWindowToTop", "CascadeWindows", "ChildWindowFromPoint", "ChildWindowFromPointEx", "CloseWindow", "CreateWindow", "CreateWindowEx", "DeferWindowPos", "DestroyWindow", "EnableWindow", "EndDeferWindowPos", "EnumChildProc", "EnumChildWindows", "EnumTaskWindows", "EnumThreadWindows", "EnumThreadWndProc", "EnumWindows", "EnumWindowsProc", "FindWindow", "FindWindowEx", "FlashWindow", "GetActiveWindow", "GetAltTabInfo", "GetAncestor", "GetClientRect", "GetDesktopWindow", "GetFocus", "GetForegroundWindow", "GetGUIThreadInfo", "GetLastActivePopup", "GetLayout", "GetNextWindow", "GetParent", "GetProcessDefaultLayout", "GetSysModalWindow", "GetTopWindow", "GetWindow", "GetWindowInfo", "GetWindowModuleFileName", "GetWindowPlacement", "GetWindowRect", "GetWindowTask", "GetWindowThreadProcessId", "IsChild", "IsIconic", "IsWindow", "IsWindowEnabled", "IsWindowUnicode", "IsWindowVisible", "IsZoomed", "LockSetForegroundWindow", "MoveWindow", "OpenIcon", "RealChildWindowFromPoint", "RealGetWindowClass", "SetActiveWindow", "SetFocus", "SetForegroundWindow", "SetLayeredWindowAttributes", "SetLayout", "SetParent", "SetProcessDefaultLayout", "SetSysModalWindow", "SetWindowPlacement", "SetWindowPos", "ShowOwnedPopups", "ShowWindow", "ShowWindowAsync", "TileWindows", "UpdateLayeredWindow", "WindowFromPoint", "WinMain", "Beep", "FatalAppExit", "FlashWindowEx", "FormatMessage", "GetLastError", "MessageBeep", "SetErrorMode", "SetLastError", "SetLastErrorEx", "CopyAcceleratorTable", "CreateAcceleratorTable", "DestroyAcceleratorTable", "LoadAccelerators", "TranslateAccelerator", "ActivateKeyboardLayout", "BlockInput", "GetAsyncKeyState", "GetKBCodePage", "GetKeyboardLayout", "GetKeyboardLayoutList", "GetKeyboardLayoutName", "GetKeyboardState", "GetKeyboardType", "GetKeyNameText", "GetKeyState", "GetLastInputInfo", "keybd_event", "LoadKeyboardLayout", "MapVirtualKey", "MapVirtualKeyEx", "OemKeyScan", "RegisterHotKey", "SendInput", "ToAscii", "ToAsciiEx", "ToUnicode", "ToUnicodeEx", "UnregisterHotKey", "SetKeyboardState", "UnloadKeyboardLayout", "VkKeyScan", "VkKeyScanEx", "CreateCaret", "DestroyCaret", "GetCaretBlinkTime", "GetCaretPos", "HideCaret", "SetCaretBlinkTime", "SetCaretPos", "ShowCaret", "図形", "Chord", "Ellipse", "FillRect", "FrameRect", "InvertRect", "Pie", "Polygon", "PolyPolygon", "Rectangle", "RoundRect", "直線、曲線", "AngleArc", "Arc", "ArcTo", "GetArcDirection", "LineDDA", "LineDDAProc", "LineTo", "MoveTo", "MoveToEx", "PolyBezier", "PolyBezierTo", "PolyDraw", "Polyline", "PolylineTo", "PolyPolyline", "SetArcDirection", "ChangeClipboardChain", "CloseClipboard", "CountClipboardFormats", "EmptyClipboard", "EnumClipboardFormats", "GetClipboardData", "GetClipboardFormatName", "GetClipboardOwner", "GetClipboardSequenceNumber", "GetClipboardViewer", "GetOpenClipboardWindow", "GetPriorityClipboardFormat", "IsClipboardFormatAvailable", "OpenClipboard", "RegisterClipboardFormat", "SetClipboardData", "SetClipboardViewer", "AllocConsole", "CreateConsoleScreenBuffer", "FillConsoleOutputAttribute", "FillConsoleOutputCharacter", "FlushConsoleInputBuffer", "FreeConsole", "GenerateConsoleCtrlEvent", "GetConsoleCP", "GetConsoleCursorInfo", "GetConsoleMode", "GetConsoleOutputCP", "GetConsoleScreenBufferInfo", "GetConsoleTitle", "GetLargestConsoleWindowSize", "GetNumberOfConsoleInputEvents", "GetNumberOfConsoleMouseButtons", "GetStdHandle", "HandlerRoutine", "PeekConsoleInput", "ReadConsole", "ReadConsoleInput", "ReadConsoleOutput", "ReadConsoleOutputAttribute", "ReadConsoleOutputCharacter", "ScrollConsoleScreenBuffer", "SetConsoleActiveScreenBuffer", "SetConsoleCP", "SetConsoleCtrlHandler", "SetConsoleCursorInfo", "SetConsoleCursorPosition", "SetConsoleMode", "SetConsoleOutputCP", "SetConsoleScreenBufferSize", "SetConsoleTextAttribute", "SetConsoleTitle", "SetConsoleWindowInfo", "SetFileApisToOEM", "SetStdHandle", "WriteConsole", "WriteConsoleInput", "WriteConsoleOutput", "WriteConsoleOutputAttribute", "WriteConsoleOutputCharacter", "EditWordBreakProc", "DlgDirListComboBox", "DlgDirSelect", "DlgDirSelectComboBox", "DlgDirSelectComboBoxEx", "GetComboBoxInfo", "EnableScrollBar", "GetScrollBarInfo", "GetScrollInfo", "GetScrollPos", "GetScrollRange", "ScrollDC", "SetScrollInfo", "SetScrollPos", "SetScrollRange", "ShowScrollBar", "CheckDlgButton", "CheckRadioButton", "IsDlgButtonChecked", "DlgDirList", "DlgDirSelectEx", "GetListBoxInfo", "CreateTextServices", "EditStreamCallback", "EditWordBreakProcEx", "ChangeServiceConfig", "ChangeServiceConfig2", "CloseServiceHandle", "CreateService", "ControlService", "DeleteService", "EnumDependentServices", "EnumServicesStatus", "EnumServicesStatusEx", "GetServiceDisplayName", "GetServiceKeyName", "LockServiceDatabase", "NotifyBootConfigStatus", "OpenSCManager", "OpenService", "QueryServiceConfig", "QueryServiceConfig2", "QueryServiceLockStatus", "QueryServiceStatus", "QueryServiceStatusEx", "RegisterServiceCtrlHandler", "ServiceMain", "SetServiceBits", "SetServiceStatus", "StartService", "StartServiceCtrlDispatcher", "UnlockServiceDatabase", "PlaySound", "sndPlaySound", "ACM", "acmDriverAdd", "acmDriverClose", "acmDriverDetails", "acmDriverEnum", "acmDriverEnumCallback", "acmDriverID", "acmDriverMessage", "acmDriverOpen", "acmDriverPriority", "acmDriverProcACM", "acmDriverRemove", "acmFilterChooseACM", "acmFilterChooseHookProc", "acmFilterDetails", "acmFilterEnumACM", "acmFilterEnumCallback", "acmFilterTagDetails", "acmFilterTagEnumACM", "acmFilterTagEnumCallback", "acmFormatChoose", "acmFormatChooseHookProc", "acmFormatDetails", "acmFormatEnum", "acmFormatEnumCallback", "acmFormatSuggest", "acmFormatTagDetails", "acmFormatTagEnum", "acmFormatTagEnumCallback", "acmGetVersion", "acmMetrics", "acmStreamClose", "acmStreamConvert", "acmStreamConvertCallback", "acmStreamMessage", "acmStreamOpen", "acmStreamPrepareHeader", "acmStreamReset", "acmStreamSize", "acmStreamUnprepareHeader", "AVIBuildFilter", "AVIClearClipboard", "AVIFileAddRef", "AVIFileCreateStream", "AVIFileEndRecord", "AVIFileExit", "AVIFileGetStream", "AVIFileInfo", "AVIFileInit", "AVIFileOpen", "AVIFileReadData", "AVIFileRelease", "AVIFileWriteData", "AVIGetFromClipboard", "AVIMakeCompressedStream", "AVIMakeFileFromStreams", "AVIMakeStreamFromClipboard", "AVIPutFileOnClipboard", "AVISave", "AVISaveOptions", "AVISaveOptionsFree", "AVISaveV", "AVIStreamAddRef", "AVIStreamBeginStreaming", "AVIStreamCreate", "AVIStreamEndStreaming", "AVIStreamFindSample", "AVIStreamGetFrame", "AVIStreamGetFrameClose", "AVIStreamGetFrameOpen", "AVIStreamInfo", "AVIStreamLength", "AVIStreamOpenFromFile", "AVIStreamRead", "AVIStreamReadData", "AVIStreamReadFormat", "AVIStreamRelease", "AVIStreamSampleToTime", "AVIStreamSetFormat", "AVIStreamStart", "AVIStreamTimeToSample", "AVIStreamWrite", "AVIStreamWriteData", "capControlCallback", "capCreateCaptureWindow", "capErrorCallback", "capGetDriverDescription", "capStatusCallback", "capVideoStreamCallback", "capWaveStreamCallback", "capYieldCallback", "CreateEditableStream", "DllGetClassObject", "DrawDibBegin", "DrawDibChangePalette", "DrawDibClose", "DrawDibDraw", "DrawDibEnd", "DrawDibGetBuffer", "DrawDibGetPalette", "DrawDibOpen", "DrawDibProfileDisplay", "DrawDibRealize", "DrawDibSetPalette", "DrawDibStart", "DrawDibStop", "DrawDibTime", "DrawEscape", "EditStreamCopy", "EditStreamCut", "EditStreamPaste", "EditStreamSetInfo", "EditStreamSetName", "GetOpenFileNamePreview", "GetSaveFileNamePreview", "MCI(Media", "mciGetCreatorTask", "mciGetDeviceID", "mciGetErrorString", "mciGetYieldProc", "mciSendCommand", "mciSendString", "mciSetYieldProc", "MCIWndCreate", "MCIWndRegisterClass", "MCI_HMS_HOUR", "MCI_HMS_MINUTE", "MCI_HMS_SECOND", "MCI_MAKE_HMS", "MCI_MAKE_MSF", "MCI_MAKE_TMSF", "MCI_MSF_FRAME", "MCI_MSF_MINUTE", "MCI_MSF_SECOND", "MCI_TMSF_FRAME", "MCI_TMSF_MINUTE", "MCI_TMSF_SECOND", "MCI_TMSF_TRACK", "MIDI", "midiConnect", "midiDisconnect", "midiInAddBuffer", "midiInClose", "midiInGetDevCaps", "midiInGetErrorText", "midiInGetID", "midiInGetNumDevs", "midiInMessage", "midiInOpen", "midiInPrepareHeader", "MidiInProc", "midiInReset", "midiInStart", "midiInStop", "midiInUnprepareHeader", "midiOutCacheDrumPatches", "midiOutCachePatches", "midiOutClose", "midiOutGetDevCaps", "midiOutGetErrorText", "midiOutGetID", "midiOutGetNumDevs", "midiOutGetVolume", "midiOutLongMsg", "midiOutMessage", "midiOutOpen", "midiOutPrepareHeader", "MidiOutProc", "midiOutReset", "midiOutSetVolume", "midiOutShortMsg", "midiOutUnprepareHeader", "midiStreamClose", "midiStreamOpen", "midiStreamOut", "midiStreamPause", "midiStreamPosition", "midiStreamProperty", "midiStreamRestart", "midiStreamStop", "mixer", "mixerClose", "mixerGetControlDetails", "mixerGetDevCaps", "mixerGetID", "mixerGetLineControls", "mixerGetLineInfo", "mixerGetNumDevs", "mixerMessage", "mixerOpen", "mixerSetControlDetails", "wave", "waveInAddBuffer", "waveInClose", "waveInGetDevCaps", "waveInGetErrorText", "waveInGetID", "waveInGetNumDevs", "waveInGetPosition", "waveInMessage", "waveInOpen", "waveInPrepareHeader", "waveInReset", "waveInStart", "waveInStop", "waveInUnprepareHeader", "waveOutBreakLoop", "waveOutClose", "waveOutGetDevCaps", "waveOutGetErrorText", "waveOutGetID", "waveOutGetNumDevs", "waveOutGetPitch", "waveOutGetPlaybackRate", "waveOutGetPosition", "waveOutGetVolume", "waveOutMessage", "waveOutOpen", "waveOutPause", "waveOutPrepareHeader", "waveOutReset", "waveOutRestart", "waveOutSetPitch", "waveOutSetPlaybackRate", "waveOutSetVolume", "waveOutUnprepareHeader", "waveOutWrite", "ICClose", "ICCompress", "ICCompressorChoose", "ICCompressorFree", "ICDecompress", "ICDecompressEx", "ICDecompressExBegin", "ICDecompressExQuery", "ICDraw", "ICDrawBegin", "ICDrawSuggestFormat", "ICGetDisplayFormat", "ICGetInfo", "ICImageCompress", "ICImageDecompress", "ICInfo", "ICInstall", "ICLocate", "ICOpen", "ICOpenFunction", "ICRemove", "ICSendMessage", "ICSeqCompressFrame", "ICSeqCompressFrameEnd", "ICSeqCompressFrameStart", "ICSetStatusProc", "joyGetDevCaps", "joyGetNumDevs", "joyGetPos", "joyGetPosEx", "joyGetThreshold", "joyReleaseCapture", "joySetCapture", "joySetThreshold", "auxGetDevCaps", "auxGetNumDevs", "auxGetVolume", "auxOutMessage", "auxSetVolume", "IOProc", "mmioAdvance", "mmioAscend", "mmioClose", "mmioCreateChunk", "mmioDescend", "mmioFlush", "mmioGetInfo", "mmioInstallIOProc", "mmioOpen", "MMIOProc", "mmioRead", "mmioRename", "mmioSeek", "mmioSendMessage", "mmioSetBuffer", "mmioSetInfo", "mmioStringToFOURCC", "mmioWrite", "timeBeginPeriod", "timeEndPeriod", "timeGetDevCaps", "timeGetSystemTime", "timeGetTime", "timeSetEvent", "ClientToScreen", "CombineTransform", "DPtoLP", "GetCurrentPositionEx", "GetMapMode", "GetViewportExtEx", "GetViewportOrgEx", "GetWindowExtEx", "GetWindowOrgEx", "GetWorldTransform", "LPtoDP", "MapWindowPoints", "ModifyWorldTransform", "OffsetViewportOrgEx", "OffsetWindowOrgEx", "ScaleViewportExtEx", "ScaleWindowExtEx", "ScreenToClient", "SetMapMode", "SetViewportExtEx", "SetViewportOrgEx", "SetWindowExtEx", "SetWindowOrgEx", "SetWorldTransform", "CompareFileTime", "DosDateTimeToFileTime", "FileTimeToDosDateTime", "FileTimeToSystemTime", "GetCurrentTime", "GetFileTime", "GetLocalTime", "GetSystemTime", "GetTickCount", "GetTimeZoneInformation", "FileTimeToLocalFileTime", "LocalFileTimeToFileTime", "SetFileTime", "SetLocalTime", "SetSystemTime", "SetTimeZoneInformation", "SystemTimeToFileTime", "AbortSystemShutdown", "DnsHostnameToComputerName", "ExitWindows", "ExitWindowsEx", "ExpandEnvironmentStrings", "GetComputerObjectName", "GetComputerName", "GetComputerNameEx", "GetCurrentHwProfile", "GetSystemDirectory", "GetSystemInfo", "GetSystemMetrics", "GetSystemWindowsDirectory", "GetThreadDesktop", "GetUserName", "GetUserNameEx", "GetVersion", "GetVersionEx", "GetWindowsDirectory", "InitiateSystemShutdown", "IsProcessorFeaturePresent", "LockWorkStation", "SetComputerName", "SetComputerNameEx", "SetSysColors", "SystemParametersInfo", "TranslateName", "VerifyVersionInfo", "WinHelp", "CPlApplet", "CommandLineToArgvW", "CoTaskMemFree", "DefScreenSaverProc", "DoEnvironmentSubst", "DragAcceptFiles", "DragFinish", "DragQueryFile", "DragQueryPoint", "ExtractIconEx", "FindExecutable", "GetMenuContextHelpId", "GetWindowContextHelpId", "RegisterDialogClasses", "ScreenSaverConfigureDialog", "ScreenSaverProc", "SetMenuContextHelpId", "SetWindowContextHelpId", "Shell_NotifyIcon", "ShellAbout", "ShellExecute", "ShellExecuteEx", "SOxxx", "SUUserxxx", "VwStreamxxx", "UndeleteFile", "SH系", "SHAddToRecentDocs", "SHAppBarMessage", "SHBrowseForFolder", "SHChangeNotify", "SHEmptyRecycleBin", "SHFileOperation", "SHFormatDrive", "SHFreeNameMappings", "SHGetDataFromIDList", "SHGetDesktopFolder", "SHGetFileInfo", "SHGetInstanceExplorer", "SHGetMalloc", "SHGetPathFromIDList", "SHGetSpecialFolderLocation", "SHGetSpecialFolderPath", "SHLoadInProc", "SHQueryRecycleBin", "DisableThreadLibraryCalls", "DllMain", "FreeLibrary", "FreeLibraryAndExitThread", "FreeModule", "FreeProcInstance", "GetModuleFileName", "GetModuleHandle", "GetProcAddress", "LoadLibrary", "LoadLibraryEx", "LoadModule", "MakeProcInstance", "KillTimer", "QueryPerformanceCounter", "QueryPerformanceFrequency", "SetTimer", "TimerProc", "CreateDialog", "CreateDialogIndirect", "CreateDialogIndirectParam", "CreateDialogParam", "DefDlgProc", "DialogBox", "DialogBoxIndirect", "DialogBoxIndirectParam", "DialogBoxParam", "DialogProc", "EndDialog", "GetDialogBaseUnits", "GetDlgCtrlID", "GetDlgItem", "GetDlgItemInt", "GetDlgItemText", "GetNextDlgGroupItem", "GetNextDlgTabItem", "IsDialogMessage", "MapDialogRect", "SendDlgItemMessage", "SetDlgItemInt", "SetDlgItemText", "MessageBox", "MessageBoxEx", "MessageBoxIndirect", "CCHookProc", "CFHookProc", "ChooseColor", "ChooseFont", "CommDlgExtendedError", "FindText", "FRHookProc", "GetFileTitle", "GetOpenFileName", "GetSaveFileName", "OFNHookProc", "OFNHookProcOldStyle", "PagePaintHook", "PageSetupDlg", "PageSetupHook", "PrintDlg", "PrintDlgEx", "PrintHookProc", "ReplaceText", "SetupHookProc", "CopyRect", "EqualRect", "InflateRect", "IntersectRect", "IsRectEmpty", "OffsetRect", "PtInRect", "SetRect", "SetRectEmpty", "SubtractRect", "UnionRect", "BuildCommDCB", "BuildCommDCBAndTimeouts", "ClearCommBreak", "ClearCommError", "CommConfigDialog", "EscapeCommFunction", "GetCommConfig", "GetCommMask", "GetCommModemStatus", "GetCommProperties", "GetCommState", "GetCommTimeouts", "GetDefaultCommConfig", "PurgeComm", "SetCommBreak", "SetCommConfig", "SetCommMask", "SetCommState", "SetCommTimeouts", "SetDefaultCommConfig", "SetupComm", "TransmitCommChar", "WaitCommEvent", "ExcludeClipRect", "ExtSelectClipRgn", "GetClipBox", "GetClipRgn", "GetMetaRgn", "GetRandomRgn", "IntersectClipRect", "OffsetClipRgn", "PtVisible", "RectVisible", "SelectClipPath", "SelectClipRgn", "SetMetaRgn", "EnumDisplayMonitors", "GetMonitorInfo", "MonitorEnumProc", "MonitorFromPoint", "MonitorFromRect", "MonitorFromWindow", "ClipCursor", "CopyCursor", "CreateCursor", "DestroyCursor", "GetClipCursor", "GetCursor", "GetCursorInfo", "GetCursorPos", "LoadCursor", "LoadCursorFromFile", "SetCursor", "SetCursorPos", "SetSystemCursor", "ShowCursor", "GetCapture", "GetDoubleClickTime", "mouse_event", "ReleaseCapture", "SetCapture", "SetDoubleClickTime", "SwapMouseButton", "CreateMDIWindow", "DefFrameProc", "DefMDIChildProc", "TranslateMDISysAccel", "BroadcastSystemMessage", "CallWndProc", "DispatchMessage", "GetInputState", "GetMessage", "GetMessageExtraInfo", "GetMessagePos", "GetMessageTime", "GetMsgProc", "GetQueueStatus", "InSendMessage", "InSendMessageEx", "PeekMessage", "PostAppMessage", "PostMessage", "PostQuitMessage", "PostThreadMessage", "RegisterWindowMessage", "ReplyMessage", "SendAsyncProc", "SendMessage", "SendMessageCallback", "SendMessageTimeout", "SendNotifyMessage", "SetMessageExtraInfo", "SetMessageQueue", "TranslateMessage", "WaitMessage", "AppendMenu", "ChangeMenu", "CheckMenuItem", "CheckMenuRadioItem", "CreateMenu", "CreatePopupMenu", "DeleteMenu", "DestroyMenu", "DrawMenuBar", "EnableMenuItem", "EndMenu", "GetMenu", "GetMenuBarInfo", "GetMenuCheckMarkDimensions", "GetMenuDefaultItem", "GetMenuInfo", "GetMenuItemCount", "GetMenuItemID", "GetMenuItemInfo", "GetMenuItemRect", "GetMenuState", "GetMenuString", "GetSubMenu", "GetSystemMenu", "HiliteMenuItem", "InsertMenu", "InsertMenuItem", "IsMenu", "LoadMenu", "LoadMenuIndirect", "MenuItemFromPoint", "ModifyMenu", "RemoveMenu", "SetMenu", "SetMenuDefaultItem", "SetMenuInfo", "SetMenuItemBitmaps", "SetMenuItemInfo", "TrackPopupMenu", "TrackPopupMenuEx", "AbnormalTermination", "GetExceptionCode", "GetExceptionInformation", "RaiseException", "SetUnhandledExceptionFilter", "UnhandledExceptionFilter"]
        dic_cpp["Keywords"]  = ["alignas", "alignof", "and", "and_eq", "asm", "atomic_cancel", "atomic_commit", "atomic_noexcept", "auto", "bitand", "bitor", "bool", "break", "case", "catch", "char", "char8_t", "char16_t", "char32_t", "class", "compl", "concept", "const", "consteval", "constexpr", "constinit", "const_cast", "continue", "co_await", "co_return", "co_yield", "decltype", "default", "delete", "do", "double", "dynamic_cast", "else", "enum", "explicit", "export", "extern", "false", "float", "for", "friend", "goto", "if", "inline", "int", "long", "mutable", "namespace", "new", "noexcept", "not", "not_eq", "nullptr", "operator", "or", "or_eq", "private", "protected", "public", "reflexpr", "register", "reinterpret_cast", "requires", "return", "short", "signed", "sizeof", "static", "static_assert", "static_cast", "struct", "switch", "synchronized", "template", "this", "thread_local", "throw", "true", "try", "typedef", "typeid", "typename", "union", "unsigned", "using", "virtual", "void", "volatile", "wchar_t", "while", "xor", "xor_eq"]
        dic_cpp["Identifier"] = ["#define", "#include", "#ifndef", "#pragma", "#ifdef"]
        dic_cpp["GeneFunc"] = ["asctime", "clock", "ctime", "difftime", "gmtime", "localtime", "mktime", "time", "calloc", "free", "malloc", "realloc", "rand", "srand", "clearerr", "fclose", "feof", "ferror", "fflush", "fgetc", "fgetpos", "fgets", "fopen", "fprintf", "fputc", "fputs", "fread", "freopen", "fscanf", "fseek", "fsetpos", "fwrite", "getc", "getchar", "gets", "perror", "printf", "putc", "putchar", "puts", "remove", "rename", "rewind", "scanf", "setbuf", "setvbuf", "sprintf", "sscanf", "tmpfile", "tmpnam", "vfprintf", "vsprintf", "memchr", "memcmp", "n", "memcpy", "memmove", "memset", "strcat", "strchr", "strcmp", "strcpy", "strcspn", "strerror", "strlen", "strncat", "strncmp", "strncpy", "strpbrk", "strrchr", "strspn", "strstr", "strtok", "isalnum", "isalpha", "iscntrl", "isdigit", "isgraph", "islower", "isprint", "ispunct", "isspace", "isupper", "isxdigit", "tolower", "toupper", "acos", "asin", "atan", "atan2", "y/x", "ceil", "cos", "cosh", "exp", "fabs", "floor", "fmod", "x", "frexp", "ldexp", "log", "log10", "pow", "sin", "sinh", "sqrt", "tan", "tanh", "abort", "abs", "atexit", "atof", "atoi", "atol", "bsearch", "div", "exit", "getenv", "labs", "ldiv", "qsort", "strtod", "strtol", "strtoul", "system", "assert", "raise", "signal", "longjmp", "setjmp"]
        dic_cpp["GeneClass"] = []
        dic_cpp["GeneNmSpace"] = ["std"]

        dic_python = {}
        dic_python["Keywords"] = ["False", "None", "True","self", "and", "as", "assert", "async", "await", "break","class", "continue", "def", "del", "elif", "else", "except", "finally", "for", "from", "global", "if", "import", "in", "is", "lambda", "nonlocal", "not","or", "pass", "raise", "return", "try", "while", "with", "yield"]
        dic_python["GeneFunc"] = ["abs", "delattr", "hash", "memoryview", "set", "all", "dict", "help", "min", "setattr", "any", "dir", "hex", "next", "slice", "ascii", "divmod", "id", "object", "sorted", "bin", "enumerate", "input", "oct", "staticmethod", "bool", "eval", "int", "open", "str", "breakpoint", "exec", "isinstance", "ord", "sum", "bytearray", "filter", "issubclass", "pow", "super", "bytes", "float", "iter", "print", "tuple", "callable", "format", "len", "property", "type", "chr", "frozenset", "list", "range", "vars", "classmethod", "getattr", "locals", "repr", "zip", "compile", "globals", "map", "reversed", "__import__", "complex", "hasattr", "max", "round"]
        dic_python["GeneLib"] = ["string", "re", "difflib", "textwrap", "unicodedata", "stringprep", "readline", "rlcompleter", "codecs", "datetime", "calendar", "collections", "heapq", "weakref", "types", "pprint", "reprlib", "enum", "numbers", "math", "cmath", "decimal", "fractions", "random", "statistics", "itertools", "functools", "operator", "os", "argparse", "getopt", "ctypes", "threading", "multiprocessing", "subprocess", "asyncore", "asynchat", "signal", "urllib", "tkinter", "distutils", "ensurepip", "venv", "zipapp", "sys", "sysconfig", "builtins", "__main__", "warnings", "dataclasses", "contextlib", "__future__", "zipimport", "pkgutil", "modulefinder", "runpy", "importlib", "parser", "ast", "symtable", "symbol", "token", "keyword"]

        dic_html = {}
        dic_html["tag"] = ["html", "head", "body", "title", "meta", "div", "span", "h1-h6", "address", "p", "br", "em", "strong", "del", "ins", "abbr", "acronym", "dfn", "blockquote", "q", "cite", "sup", "sub", "pre", "code", "var", "kbd", "samp", "bdo", "font", "basefont", "big", "small", "b", "i", "s", "strike", "u", "tt", "center", "hr", "a", "base", "link", "ul", "ol", "li", "dl", "dt", "dd", "dir", "menu", "img", "map", "area", "object", "applet", "param", "table", "caption", "thead", "tfoot", "tbody", "colgroup", "col", "tr", "td", "th", "frameset", "frame", "noframes", "iframe", "form", "input", "textarea", "select", "option", "optgroup", "button", "label", "fieldset", "legend", "isindex", "style", "script", "noscript"]
        dic_html["Property"] = ["font", "font-size", "font-weight", "font-style", "font-family", "font-variant", "text-align", "vertical-align", "line-height", "text-decoration", "text-indent", "text-transform", "letter-spacing", "word-spacing", "white-space", "color", "background", "background-color", "background-image", "background-repeat", "background-position", "background-attachment", "width", "height", "max-width", "min-width", "max-height", "min-height", "margin", "margin-top", "margin-right", "margin-bottom", "margin-left", "padding", "padding-top", "padding-right", "padding-bottom", "padding-left", "border", "border-top", "border-right", "border-bottom", "border-left", "border-width", "border-top-width", "border-right-width", "border-bottom-width", "border-left-width", "border-color", "border-top-color", "border-right-color", "border-bottom-color", "border-left-color", "border-style", "border-top-style", "border-right-style", "border-bottom-style", "border-left-style", "overflow", "display", "visibility", "clip", "float", "clear", "position", "top", "right", "bottom", "left", "z-index", "direction", "unicode-bidi", "list-style", "list-style-type", "list-style-position", "list-style-image", "table-layout", "border-collapse", "border-spacing", "empty-cells", "caption-side", "content", "quotes", "outline", "outline-width", "outline-color", "outline-style", "cursor", "page-break-before", "page-break-after", "page-break-inside"]

        dic_css = {}
        dic_css["PropName"] = dic_html["Property"]
        dic_css["Keywords"] = ["after", "before", "hover", "active", "lang", "first-child", "link", "visited", "focus", "first-line", "first-letter", "enabled", "disabled", "checked", "target", "empty", "root", "only-of-type", "only-child", "ntf-child", "ntf-last-child", "ntf-of-type", "not"]
        dic_css["Value"] = ["normal", "none", "auto", "ease", "visible", "scroll", "separete", "medium", "currentcolor", "top", "bottom", "left", "right", "center", "block", "inline", "inline-block", "initial", "show", "row", "nowrap", "manual", "legacy", "outside", "disc", "none", "hidden", "solid", "double", "groove", "ridge", "inset", "outset", "dashed", "dotted"]

        dic_java = {}
        dic_java["Keywords"] = ["abstract", "assert", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "default", "do", "double", "else", "enum", "extends", "final", "finally", "float", "for", "goto", "if", "implements", "import", "instanceof", "int", "interface", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "strictfp", "super", "switch", "synchronized", "this", "throw", "throws", "transient", "try", "void", "volatile", "while", "true", "false", "null"]

        dic_arduino = {}
        dic_arduino["Keywords"] = ["alignas", "alignof", "and", "and_eq", "asm", "atomic_cancel", "atomic_commit", "atomic_noexcept", "auto", "bitand", "bitor", "bool", "break", "case", "catch", "char", "char8_t", "char16_t", "char32_t", "class", "compl", "concept", "const", "consteval", "constexpr", "constinit", "const_cast", "continue", "co_await", "co_return", "co_yield", "decltype", "default", "delete", "do", "double", "dynamic_cast", "else", "enum", "explicit", "export", "extern", "false", "float", "for", "friend", "goto", "if", "inline", "int", "long", "mutable", "namespace", "new", "noexcept", "not", "not_eq", "nullptr", "operator", "or", "or_eq", "private", "protected", "public", "reflexpr", "register", "reinterpret_cast", "requires", "return", "short", "signed", "sizeof", "static", "static_assert", "static_cast", "struct", "switch", "synchronized", "template", "this", "thread_local", "throw", "true", "try", "typedef", "typeid", "typename", "union", "unsigned", "using", "virtual", "void", "volatile", "wchar_t", "while", "xor", "xor_eq", "boolean", "byte", "word", "double", "String", "Static", "volatile", "Cast"]
        dic_arduino["GeneFunc"] = ["pinMode", "digitalWrite", "digitalRead", "analogRead", "analogWrite", "analogReference", "analogReadResolution", "analogWriteResolution", "shiftOut", "shiftIn", "pulseIn", "tone", "noTone", "millis", "micros", "delay", "delayMicroseconds", "min", "max", "abs", "constrain", "map", "pow", "sqrt", "sin", "cos", "tan", "randomSeed", "random", "lowByte", "highByte", "bitRead", "bitWrite", "bitSet", "bitClear", "bit", "attachInterrupt", "detachInterrupt", "interrupts", "noInterrupts", "begin", "end", "available", "read", "peek", "flush", "print", "println", "write", "SoftwareSerial", "isListening", "overflow", "listen", "setSpeed", "step", "requestFrom", "beginTransmission", "endTransmission", "onReceive", "onRequest", "setBitOrder", "setClockDivider", "setDataMode", "transfer", "attach", "writeMicroseconds", "attached", "detach", "LiquidCrystal", "clear", "home", "setCursor", "cursor", "noCursor", "blink", "noBlink", "display", "noDisplay", "scrollDisplayLeft", "scrollDisplayRight", "autoscroll", "noAutoscroll", "leftToRight", "rightToLeft", "createChar", "localIP", "maintain", "EthernetServer", "EthernetClient", "connected", "connect", "stop", "exists", "mkdir", "open", "remove", "rmdir", "close", "position", "seek", "size", "isDirectory", "openNextFile", "rewindDirectory"]
        dic_arduino["GeneClass"] = ["SD", "File", "MsTimer2", "ServoTimer1", "CapSense", "TLC5940", "Client", "Server", "Ethernet", "LiquidCrystal", "Firmata", "Servo", "SPI", "Wire", "Stepper", "SoftwareSerial", "EEPROM", "Serial"]
        dic_arduino["Identifier"] =  dic_cpp["Identifier"]
        dic_arduino["Macro"] = ["HIGH", "LOW", "INPUT", "OUTPUT"]

        dic_processing = {}
        dic_processing["Keywords"] = dic_java["Keywords"]
        dic_processing["GeneFunc"] = ["size", "noLoop", "loop", "redraw", "exit", "delay", "screenWidth,", "frameRate", "online", "cursor", "hint", "random", "randomSeed", "noise", "noiseSeed", "noiseDetail", "match", "splitTokens", "trim", "nf", "beginShape", "vertex", "endShape", "background", "colorMode", "stroke", "noStroke", "fill", "noFill", "color", "loadImage", "createImage", "requestImage", "image", "imageMode", "tint", "loadFont", "textFont", "text", "createFont", "textSize", "textAlign", "textLeading", "textWidth", "saveFrame", "save", "print", "println"]
        dic_processing["GeneClass"] = ["PFont","PShape","PImage"]

        self.yoyakugo_dic["cpp"] = self._makeYoyakugoDic(dic_cpp)
        self.yoyakugo_dic["python"] = self._makeYoyakugoDic(dic_python)
        self.yoyakugo_dic["java"] = self._makeYoyakugoDic(dic_java)
        self.yoyakugo_dic["html"] = self._makeYoyakugoDic(dic_html)
        self.yoyakugo_dic["css"] = self._makeYoyakugoDic(dic_css)
        self.yoyakugo_dic["arduino"] = self._makeYoyakugoDic(dic_arduino)
        self.yoyakugo_dic["processing"] = self._makeYoyakugoDic(dic_processing)
        self.yoyakugo_dic[""] = {}

        return self.yoyakugo_dic

    def make_splitter_text_list(self):
        self.splitter_text_dic["cpp"]    = [".", ",", ":", ";", "\"", "\'", "-", "+", "*", "/", " ", "<", ">", "(", ")", "[", "]", "{", "}", "=", "&"]
        self.splitter_text_dic["python"] = [".", ",", ":", ";", "\"", "\'", "-", "+", "*", "/", " ", "<", ">", "(", ")", "[", "]", "{", "}", "=", "#"]
        self.splitter_text_dic["java"]   = [".", ",", ":", ";", "\"", "\'", "-", "+", "*", "/", " ", "<", ">", "(", ")", "[", "]", "{", "}", "="]
        self.splitter_text_dic["html"]   = [".", ",", ":", ";", "\"", "\'"     , "+", "*", "/", " ", "<", ">", "(", ")", "[", "]", "{", "}", "="]
        self.splitter_text_dic["css"]    = [".", ",", ":", ";", "\"", "\'"      , "+", "*", "/", " ", "<", ">", "(", ")", "[", "]", "{", "}", "="]
        self.splitter_text_dic["arduino"]    = self.splitter_text_dic["cpp"]
        self.splitter_text_dic["processing"] = self.splitter_text_dic["java"]
        self.splitter_text_dic[""] = {".", ",", ":", ";", "\"", "\'", "-", "+", "*", "/", " ", "<", ">", "(", ")", "[", "]", "{", "}", "=", "::", "->", "&"}

        self.prime_splitter_dic["cpp"]    = ["//", "/*", "*/", "\n", "::", "->","\t"]
        self.prime_splitter_dic["python"] = ["\"\"\"", "\n","\t"]
        self.prime_splitter_dic["java"]   = ["\n","\t"]
        self.prime_splitter_dic["html"]   = ["/*", "*/", "<!--", "-->", "\n","\t"]
        self.prime_splitter_dic["css"]    = ["/*", "*/", "<!--", "-->", "\n","\t"]
        self.prime_splitter_dic["arduino"]    = self.prime_splitter_dic["cpp"]
        self.prime_splitter_dic["processing"] = self.prime_splitter_dic["java"]
        self.prime_splitter_dic[""] = ["\n"]

        return self.splitter_text_dic, self.prime_splitter_dic

    def make_unique_char_dic(self):
        self.unique_char_dic = {"&":"&amp;", "<":"&lt;", ">":"&gt;"}
        return self.unique_char_dic

    def make_usertype_bfaf_text(self):
        self.make_yoyakugo_dic()
        self.usertype_bfaf["cpp"] = {"MyFunc":[["void", "char", "int", "float", "double",  "signed", "unsigned", "::"], ["("]],
                                     "MyClass":[["class", "struct", "union","enum"], ["(", "{", ";"]],
                                     "Macro":[["#define", "#ifdef", "ifndef"],["ALL_STRING_OK"]]}

        self.usertype_bfaf["python"] = {"MyFunc":[["def"], ["("]],
                                     "MyClass":[["class", ""], ["(", ":", "."]]}

        self.usertype_bfaf["java"] = {"MyFunc":[["void", "char", "int", "float", "double",  "signed", "unsigned", "::"], ["("]],
                                     "MyClass":[["class", "struct", "union","enum"], ["(", "{", ";"]],
                                     "Macro":[["#define", "#ifdef", "ifndef"],["ALL_STRING_OK"]]}

        self.usertype_bfaf["html"] = {}

        self.usertype_bfaf["arduino"] = self.usertype_bfaf["cpp"]
        self.usertype_bfaf["css"] =  self.usertype_bfaf["html"]
        self.usertype_bfaf[""] = {}
        return self.usertype_bfaf

    def make_comment_text(self):
        self.comment_bfaf["cpp"] = {"line":["//"], "before":["/*"], "after":["*/"]}
        self.comment_bfaf["python"] = {"line":["#"], "before":["\"\"\""], "after":["\"\"\""]}
        self.comment_bfaf["java"] = {"line":["//"], "before":["\"\"\""], "after":["\"\"\""]}
        self.comment_bfaf["html"] = {"line":[], "before":["/*", "<!--"], "after":["*/", "-->"]}
        self.comment_bfaf["arduino"] = self.comment_bfaf["cpp"]
        self.comment_bfaf["css"] =  self.comment_bfaf["html"]
        self.comment_bfaf[""] =  {}
        return self.comment_bfaf

    def _makeYoyakugoDic(self, in_dic):
        out_dic = {}
        for key in in_dic.keys():
            for value in in_dic[key]:
                out_dic[value] = key
        return out_dic

    def LoadAll(self):
        self.make_yoyakugo_dic()
        self.make_splitter_text_list()
        self.make_unique_char_dic()
        self.make_usertype_bfaf_text()
        self.make_comment_text()

    def SaveAsPickle(self, filename = "database.pickle"):
        self.LoadAll()
        DICTIONARY = {"yoyakugo":self.yoyakugo_dic,
                      "comment_bfaf":self.comment_bfaf,
                      "unique_char":self.unique_char_dic,
                      "splitter_general":self.splitter_text_dic,
                      "splitter_prime":self.prime_splitter_dic,
                      "usertype_bfaf":self.usertype_bfaf}

        f = open(filename, 'w')
        pickle.dump(DICTIONARY, f)
        f.close()

    def ReadPickleFile(self, filename = "database.pickle"):
        f = open(filename, 'w')
        DICTIONARY = pickle.load(f)
        f.close()

        self.yoyakugo_dic     = DICTIONARY["yoyakugo"]
        self.comment_bfaf     = DICTIONARY["comment_bfaf"]
        self.unique_char_dic  = DICTIONARY["unique_char"]
        self.splitter_text_dic  = DICTIONARY["splitter_general"]
        self.prime_splitter_dic = DICTIONARY["splitter_prime"]
        self.usertype_bfaf      = DICTIONARY["usertype_bfaf"]
